
## Command to make the file run ##
#
# sudo '../../../mnt/c/Program Files/Blender Foundation/Blender 3.2/blender.exe'  -b -P importscript.py -- 1 1
#
## ARGV ##
#ARGV[0] - The file passed in to convert into obj files
#

# Import yhe needed modules (bpy is Blender)
import bpy
import math
import os
import re
import sys


#
## Values that could change ##
# save/load .obj files to/from
stlDirectory = '../processFiles/3-OBJintoSTL'


# Get the arguments and save as strings
argv = sys.argv
argv = argv[argv.index("--") + 1:]  # get all args after "--"
#print(argv)

timesToRepeat=int(argv[2])


# delete starting objects generated by Blender by Default
#print("Deleting Starting Objects")
#print("")
startingObjects = ["Light", "Camera"]
for obj in startingObjects:
    bpy.data.objects[obj].select_set(True)    
    bpy.context.view_layer.objects.active = bpy.data.objects[obj]
bpy.ops.object.delete()

print("PRINT")
print(argv[0])

######## Convert obj to stl ##########

#print("beginning to convert fbx files to obj frames.")
# For each fbx animation.
objFile = argv[0]
# checking if it is a file
if os.path.isfile(objFile):
    print("Beginning import of "+objFile)
    # Import FBX into the scene
    bpy.ops.import_scene.obj(filepath=objFile)

# Make sure nothing selected
bpy.ops.object.select_all(action='DESELECT')

# Get everything imported
objects = bpy.context.scene.objects
print("Now exporting frames as obj")
FrameCount = 0
for obj in objects:
    print(obj.name)
    obj.select_set(True)
    # If so create a directory for the animation and export it
    bpy.context.view_layer.objects.active = obj
    newpath = stlDirectory+"/"+str(timesToRepeat)+"x"+obj.name
    if not os.path.exists(newpath):
        os.makedirs(newpath)
    while (timesToRepeat>0):
        bpy.context.view_layer.objects.active = obj
        bpy.ops.export_mesh.stl(filepath = newpath+"/"+str(timesToRepeat)+argv[1][:-4]+".stl",ascii=True,use_selection=True)
        timesToRepeat=timesToRepeat-1